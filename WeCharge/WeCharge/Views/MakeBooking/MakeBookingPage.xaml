<ContentPage
    xmlns="http://xamarin.com/schemas/2014/forms"
    xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
    xmlns:local="clr-namespace:WeCharge.CustomControls"
    xmlns:theme="clr-namespace:WeCharge.Theme"
    xmlns:resx="clr-namespace:WeCharge.Resources"
    xmlns:maps="clr-namespace:Xamarin.Forms.Maps;assembly=Xamarin.Forms.Maps"
    xmlns:cv="http://xamarin.com/schemas/2014/forms"
    x:Class="WeCharge.Views.MakeBooking.MakeBookingPage"
    BackgroundColor="{StaticResource BackgroundColor}"
    xmlns:extension="clr-namespace:Xamarin.Forms.Skeleton;assembly=Xamarin.Forms.Skeleton">
    <ContentPage.Resources>
        <ResourceDictionary>
        </ResourceDictionary>
    </ContentPage.Resources>
    <ContentPage.Content>
        <ScrollView>
            <Grid IsEnabled="{Binding IsGridEnabled}" x:Name="MainGrid" RowDefinitions="auto,45,*">
                <Grid Margin="20,10,0,0" Grid.Row="0" HorizontalOptions="FillAndExpand" ColumnDefinitions="auto,auto">
                    <Label Grid.Column="0" VerticalOptions="Center" Text="{Binding Source={x:Static theme:FontIcons.Menu}}" TextColor="Black"  HeightRequest="20" WidthRequest="20" FontSize="20" Style="{StaticResource IconLabelSolid}" HorizontalOptions="FillAndExpand" >
                        <Label.GestureRecognizers>
                            <TapGestureRecognizer Tapped="NavBarTapped"/>
                        </Label.GestureRecognizers>
                    </Label>
                    <Grid Grid.Column="1" ColumnDefinitions="*,auto" HorizontalOptions="End" VerticalOptions="CenterAndExpand">
                        <Frame HasShadow="False" BorderColor="LightGray" BackgroundColor="{StaticResource BackgroundColor}" Grid.Column="0" CornerRadius="5" Padding="2" Margin="5,10,5,0" VerticalOptions="Start" HorizontalOptions="Start">
                            <local:CustomSearchBar TextColor="Black" BackgroundColor="{StaticResource BackgroundColor}" HeightRequest="50" PlaceholderColor="gray" Placeholder="Search for location" x:Name="locationSearchBar" TextChanged="SearchBarTextChanged" Unfocused="SearchBarUnFocus"/>
                        </Frame>
                        <Frame HasShadow="False" BorderColor="LightGray" Grid.Column="1" CornerRadius="5" BackgroundColor="transparent" WidthRequest="30" HeightRequest="30" Padding="12" Margin="0,10,10,0" VerticalOptions="CenterAndExpand" HorizontalOptions="StartAndExpand">
                            <Label HorizontalOptions="CenterAndExpand" VerticalOptions="Center" TextColor="Black" Text="{Binding Source={x:Static theme:FontIcons.Filter}}" Style="{StaticResource IconLabelLight}" Padding="0" FontSize="24">
                                <Label.GestureRecognizers>
                                    <TapGestureRecognizer Tapped="FilterTapped"/>
                                </Label.GestureRecognizers>
                            </Label>
                        </Frame>
                    </Grid>
                </Grid>

                <!-- <ActivityIndicator Grid.Row="2" Color="Black" IsRunning="{Binding IsBusy}" IsVisible="{Binding IsBusy}" HorizontalOptions="CenterAndExpand" VerticalOptions="Center"/> -->

                <!-- Content Area -->
                <Grid Grid.Row="1" RowDefinitions="*,250" Grid.RowSpan="2" BackgroundColor="Transparent" Margin="0,0,0,0" x:Name="MapView" VerticalOptions="FillAndExpand">
                    <local:CustomMap
                        IsVisible="False"
                        Grid.Row="0" Grid.RowSpan="2"
                        ItemsSource="{Binding PinLocations}"
                        RelativeLayout.WidthConstraint="{ConstraintExpression Type=RelativeToParent, Property=Width}"
                        RelativeLayout.HeightConstraint="{ConstraintExpression Type=RelativeToParent, Property=Height}"
                        RelativeLayout.YConstraint="{ConstraintExpression Type=RelativeToParent, Property=Height, Factor=-0.07}"
                        RelativeLayout.XConstraint="{ConstraintExpression Type=RelativeToParent, Property=Width, Factor=0}"
                        VerticalOptions="FillAndExpand"
                        x:Name="map"
                        HasScrollEnabled="True"
                        HasZoomEnabled="True"
                        IsShowingUser="True"
                        TrafficEnabled="False"
                    />


                    <!-- CarouselView -->
                    <CarouselView
                        IsVisible="False"
                        Grid.Row="1"
                        x:Name="MyCarousel"
                        PositionChanged="Carousel_PositionChanged"
                        ItemsSource="{Binding CarouselItems}">
                        <CarouselView.ItemTemplate>
                            <DataTemplate>
                                <Grid ColumnDefinitions="auto,auto" RowDefinitions="auto,auto,auto,auto,auto" VerticalOptions="Start" >
                                    <Frame x:Name="CarouselFrame" BackgroundColor="{DynamicResource CarouselFrameColor}" BorderColor="Gray" HasShadow="False" CornerRadius="15" VerticalOptions="Start">
                                        <StackLayout>
                                            <Grid ColumnDefinitions="*,*" BackgroundColor="Transparent" RowSpacing="2" RowDefinitions="auto,auto,auto,auto,auto">
                                                <Label Grid.Row="0" Grid.Column="0" Margin="0,0,0,5" Grid.ColumnSpan="2" Text="{Binding Location}"   Style="{StaticResource HeadingText}" TextColor="{StaticResource EntryPlaceholderColor}"/>
                                                <Label Grid.Row="0" Grid.Column="1" Margin="0,0,0,5" Text="{Binding Distance}" Style="{StaticResource HeadingText}" TextColor="{StaticResource EntryPlaceholderColor}" HorizontalTextAlignment="End" />
                                                <Label Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2" Text="{Binding Address}"  HorizontalOptions="StartAndExpand" TextColor="{StaticResource EntryPlaceholderColor}" VerticalOptions="Center" Style="{StaticResource RegularLabelLightStyle}" />
                                                <Label  Grid.Row="1" Grid.Column="1" Text="{Binding Time}" Style="{StaticResource RegularLabelLightStyle}" TextColor="{StaticResource EntryPlaceholderColor}" HorizontalOptions="End"/>
                                                <Label Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="2" Text="{Binding PostCode}" Style="{StaticResource RegularLabelLightStyle}" TextColor="{StaticResource EntryPlaceholderColor}" VerticalOptions="Center"  />
                                                <Label Grid.Row="3" Grid.Column="0" Text="{Binding Source={x:Static theme:FontIcons.Charging}}" Style="{StaticResource IconLabelLight}" TextColor="{StaticResource EntryPlaceholderColor}" VerticalOptions="Center" />
                                                <Label Grid.Row="3" Grid.Column="0" Margin="20,0,0,0" HorizontalOptions="Start" Text="{Binding LevelInfo}"  Style="{StaticResource RegularLabelLightStyle}" TextColor="{StaticResource EntryPlaceholderColor}" VerticalOptions="Center"  />
                                            </Grid>
                                            <Button Grid.Row="4"  Style="{StaticResource SecondaryRegularButtonStyle}" Text="{Binding Source={x:Static resx:AppLanguage.CheckAvailability}}" Clicked="CarouselCheckAvailabilityClicked" HorizontalOptions="FillAndExpand" VerticalOptions="CenterAndExpand" />
                                        </StackLayout>
                                    </Frame>
                                </Grid>
                            </DataTemplate>
                        </CarouselView.ItemTemplate>
                    </CarouselView>
                </Grid>
                <!--#endregion-->
                <!-- #ListViewRegion -->
                <StackLayout Grid.Row="2" x:Name="ListView" Orientation="Vertical" Margin="0,0,0,0">
                    <ListView VerticalOptions="FillAndExpand" x:Name="listView" IsPullToRefreshEnabled="True" IsVisible="true"  BackgroundColor="Transparent" SeparatorVisibility="None" HasUnevenRows="True" ItemsSource="{Binding BookingItems}" SelectionMode="None">
                        <ListView.ItemTemplate>
                            <DataTemplate>
                                <ViewCell x:Name="ViewCellList" Tapped="ListCellTapped">
                                    <!--region First Grid-->
                                    <Frame Style="{StaticResource ValuesFrameStyle}" Margin="20,10">
                                        <Grid ColumnDefinitions="*,auto" >
                                            <StackLayout Grid.Column="0" >
                                                <Label Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2"  Text="{Binding Location}" Style="{StaticResource RegularLabelStyle}" FontSize="14" extension:Skeleton.IsBusy="{Binding IsBusy}" extension:Skeleton.Animation="{extension:DefaultAnimation Fade}" extension:Skeleton.BackgroundColor="LightGray"/>
                                                <Label Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2"  Text="{Binding Address}" HorizontalOptions="StartAndExpand" Style="{StaticResource RegularLabelLightStyle}" extension:Skeleton.IsBusy="{Binding IsBusy}" extension:Skeleton.Animation="{extension:DefaultAnimation Fade}" extension:Skeleton.BackgroundColor="LightGray"/>
                                                <Label Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="2" Text="{Binding City}" Style="{StaticResource RegularLabelLightStyle}" extension:Skeleton.IsBusy="{Binding IsBusy}" extension:Skeleton.Animation="{extension:DefaultAnimation Fade}" extension:Skeleton.BackgroundColor="LightGray"/>
                                                <StackLayout Orientation="Horizontal">
                                                    <Label Grid.Row="3" Grid.Column="0" Text="{Binding Icon}" VerticalTextAlignment="Center" Style="{StaticResource IconLabelLight}" extension:Skeleton.IsBusy="{Binding IsBusy}" extension:Skeleton.Animation="{extension:DefaultAnimation Fade}" extension:Skeleton.BackgroundColor="Gray"/>
                                                    <Label Grid.Row="3" Grid.Column="1" Text="{Binding LevelInfo}" Style="{StaticResource RegularLabelStyle}" FontAttributes="Bold" extension:Skeleton.IsBusy="{Binding IsBusy}" extension:Skeleton.Animation="{extension:DefaultAnimation Fade}" extension:Skeleton.BackgroundColor="Gray"/>
                                                </StackLayout>
                                            </StackLayout>
                                            <!--#endregion-->
                                            <!--region Second Grid-->
                                            <Grid Grid.Column="1"  HorizontalOptions="End" RowDefinitions="auto,auto,*" RowSpacing="0" ColumnDefinitions="auto">
                                                <Label Grid.Row="0" Grid.Column="0" Text="{Binding Distance}" Style="{StaticResource RegularLabelLightStyle}" HorizontalTextAlignment="End" />
                                                <Label  Grid.Row="1" Grid.Column="0" Text="{Binding Time}" Style="{StaticResource RegularLabelLightStyle}" HorizontalOptions="End"/>
                                                <!--Handle the CheckAvailabilityTapped event when the IconButton is clicked-->
                                                <local:IconButton  Grid.Row="2" Grid.Column="0" FrameHeight="20" extension:Skeleton.IsBusy="{Binding IsBusy}" extension:Skeleton.Animation="{extension:DefaultAnimation Fade}" extension:Skeleton.BackgroundColor="LightGray" OnIconButtonClicked="CheckAvailabilityClicked" Style="{StaticResource PrimaryIconButtonStyle}" TitleText="{Binding Source={x:Static resx:AppLanguage.CheckAvailability}}" IconText="{Binding Source={x:Static theme:FontIcons.CheckCircle}}" VerticalOptions="EndAndExpand" HorizontalOptions="End">
                                                </local:IconButton>
                                            </Grid>
                                            <!--#endregion-->
                                        </Grid>
                                    </Frame>
                                </ViewCell>
                            </DataTemplate>
                        </ListView.ItemTemplate>
                    </ListView>
                </StackLayout>

                <Grid x:Name="TopButtonsGrid" Grid.Row="1" HorizontalOptions="Center" WidthRequest="190" Margin="0,5,0,0">
                    <Button x:Name="MapViewButton" Text="{Binding Source={x:Static resx:AppLanguage.MapView}}" TextColor="#616161" Margin="0" BackgroundColor="#D9D9D9" FontSize="14" CornerRadius="8" WidthRequest="100" HeightRequest="45" HorizontalOptions="Start" Clicked="MapViewButton_Clicked"/>
                    <Button x:Name="ListViewButton" Text="{Binding Source={x:Static resx:AppLanguage.ListView}}" Margin="90,0,0,0" TextColor="White" BackgroundColor="Black" CornerRadius="8" WidthRequest="100" HeightRequest="45" HorizontalOptions="Start" Clicked="ListViewButton_Clicked" />
                </Grid>
                <!--Search list view area-->
                <Grid Grid.Row="1" Grid.RowSpan="2" Padding="0" VerticalOptions="Fill" x:Name="searchBarGrid">
                    <ListView x:Name="SearchBarList" IsVisible="false" BackgroundColor="White" HorizontalOptions="FillAndExpand"  Margin="5,0,0,5"  HasUnevenRows="true">
                        <ListView.ItemTemplate>
                            <DataTemplate>
                                <ViewCell Tapped="MoveToLocationTapped">
                                    <StackLayout VerticalOptions="FillAndExpand" HorizontalOptions="FillAndExpand">
                                        <Label Text="{Binding Label}" FontAttributes="Bold" Margin="2,2,0,0" TextColor="Black"/>
                                        <Label Text="{Binding Address}" LineBreakMode="WordWrap" MaxLines="2" Margin="2,0,0,1" TextColor="Gray"/>
                                    </StackLayout>

                                </ViewCell>
                            </DataTemplate>
                        </ListView.ItemTemplate>
                    </ListView>

                </Grid>
            </Grid>
        </ScrollView>

    </ContentPage.Content>
</ContentPage>

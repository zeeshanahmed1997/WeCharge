<?xml version="1.0" encoding="UTF-8" ?>
<ContentPage
    xmlns="http://xamarin.com/schemas/2014/forms"
    xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
    xmlns:local="clr-namespace:WeCharge.CustomControls"
    xmlns:theme="clr-namespace:WeCharge.Theme"
    xmlns:resx="clr-namespace:WeCharge.Resources"
    xmlns:ios="clr-namespace:Xamarin.Forms.PlatformConfiguration.iOSSpecific;assembly=Xamarin.Forms.Core"
             ios:Page.UseSafeArea="True"
    xmlns:maps="clr-namespace:Xamarin.Forms.Maps;assembly=Xamarin.Forms.Maps"
    x:Class="WeCharge.Views.BottomTab.HomePage"
    BackgroundColor="{StaticResource BackgroundColor}"
    xmlns:extension="clr-namespace:Xamarin.Forms.Skeleton;assembly=Xamarin.Forms.Skeleton">
    <ContentPage.Content>
        <ScrollView>
            <Grid VerticalOptions="Start" RowDefinitions="auto,auto,auto,auto,auto,auto">
                <Grid Grid.Row="0" ColumnDefinitions="*,*,auto" Margin="20" RowDefinitions="30">
                    <Label Grid.Column="0" VerticalOptions="EndAndExpand" Text="{Binding Source={x:Static theme:FontIcons.Menu}}" TextColor="Black" HeightRequest="20" WidthRequest="20" FontSize="20" Style="{StaticResource IconLabelSolid}" HorizontalOptions="Start" >
                        <Label.GestureRecognizers>
                            <TapGestureRecognizer Tapped="NavBarTapped"/>
                        </Label.GestureRecognizers>
                    </Label>
                    <Label Grid.Column="1" HorizontalOptions="End" VerticalOptions="End" Text="{Binding UserName}" TextColor="Black" Style="{StaticResource HeadingText}" FontAttributes="Bold" />
                    <Image Grid.Column="2" HorizontalOptions="End" VerticalOptions="End" Source="logo.png" WidthRequest="50" HeightRequest="30" Aspect="AspectFill" />
                </Grid>
                <!--#region Charging Page-->
                <Grid Grid.Row="1" Margin="20,0,20,5" RowSpacing="10" RowDefinitions="auto,auto" VerticalOptions="Start" IsVisible="{Binding ChargingVisible}">
                    <Label Grid.Row="0" Text="{Binding Source={x:Static resx:AppLanguage.ChargeInProgress}}"  Style="{StaticResource HeadingText}"/>
                    <Frame HasShadow="False" Grid.Row="2" Style="{StaticResource ValuesFrameStyle}">
                        <Grid Padding="0" ColumnDefinitions="*,auto" RowDefinitions="auto">
                            <Grid Grid.Row="0" Grid.Column="0" VerticalOptions="Center" RowDefinitions="auto,auto,auto" ColumnDefinitions="auto,*">
                                <Label Grid.Row="0" Grid.Column="1"  Text="{Binding ChargingDate}" Style="{StaticResource RegularLabelStyle}" extension:Skeleton.IsBusy="{Binding IsChargingBusy}" extension:Skeleton.Animation="{extension:DefaultAnimation Fade}" extension:Skeleton.BackgroundColor="LightGray"/>
                                <Label Grid.Row="0" Grid.Column="0"  Text="{Binding Source={x:Static theme:FontIcons.Calendar}}" Style="{StaticResource IconLabelLight}" extension:Skeleton.IsBusy="{Binding IsChargingBusy}" extension:Skeleton.Animation="{extension:DefaultAnimation Fade}" extension:Skeleton.BackgroundColor="LightGray"/>
                                <Label Grid.Row="1" Grid.Column="1"   Text="{Binding ChargingAddress}" Style="{StaticResource RegularLabelStyle}" extension:Skeleton.IsBusy="{Binding IsChargingBusy}" extension:Skeleton.Animation="{extension:DefaultAnimation Fade}" extension:Skeleton.BackgroundColor="LightGray"/>
                                <Label Grid.Row="1" Grid.Column="0"  Text="{Binding Source={x:Static theme:FontIcons.Location}}" Style="{StaticResource IconLabelLight}" extension:Skeleton.IsBusy="{Binding IsChargingBusy}" extension:Skeleton.Animation="{extension:DefaultAnimation Fade}" extension:Skeleton.BackgroundColor="LightGray"/>
                                <Label Grid.Row="2" Grid.Column="1"  Text="{Binding ChargingTime}" Style="{StaticResource RegularLabelStyle}" extension:Skeleton.IsBusy="{Binding IsChargingBusy}" extension:Skeleton.Animation="{extension:DefaultAnimation Fade}" extension:Skeleton.BackgroundColor="LightGray"/>
                                <Label Grid.Row="2" Grid.Column="0"  Text="{Binding Source={x:Static theme:FontIcons.Time}}" Style="{StaticResource IconLabelLight}" extension:Skeleton.IsBusy="{Binding IsChargingBusy}" extension:Skeleton.Animation="{extension:DefaultAnimation Fade}" extension:Skeleton.BackgroundColor="LightGray"/>

                                <!-- <ActivityIndicator Grid.Row="0" Grid.Column="2" Color="Black" Grid.RowSpan="2" x:Name="PendingBookingActivityIndicator" IsRunning="{Binding IsPendingBookingBusy}" IsVisible="{Binding IsPendingBookingBusy}" VerticalOptions="CenterAndExpand" HorizontalOptions="CenterAndExpand" /> -->
                            </Grid>
                            <Grid Grid.Row="0" Grid.Column="1">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <Button Grid.Row="0" BackgroundColor="Red" TextColor="White" FontSize="16" FontFamily="{StaticResource PoppinsRegular}" Grid.RowSpan="2" HeightRequest="36" Padding="10,0" CornerRadius="5" VerticalOptions="Center" HorizontalOptions="End" Text="{Binding Source={x:Static resx:AppLanguage.Charging}}" Command="{Binding GoToChargingCommand}" extension:Skeleton.IsBusy="{Binding IsChargingBusy}" extension:Skeleton.Animation="{extension:DefaultAnimation Fade}" />
                                <Grid.Triggers>
                                    <DataTrigger TargetType="Grid" Binding="{Binding IsChargingBusy}" Value="True">
                                        <Setter Property="IsEnabled" Value="False" />
                                    </DataTrigger>

                                    <!-- Enable Grid when IsSkeletonAnimationRunning is false -->
                                    <DataTrigger TargetType="Grid" Binding="{Binding IsChargingBusy}" Value="False">
                                        <Setter Property="IsEnabled" Value="True" />
                                    </DataTrigger>

                                </Grid.Triggers>
                            </Grid>
                        </Grid>
                    </Frame>
                </Grid>
                <!--#endregion-->
                <!--#region Pending Charge-->
                <Grid Grid.Row="2" Margin="20,0,20,5" RowSpacing="10" RowDefinitions="auto,auto,*" VerticalOptions="Start" IsVisible="{Binding PendingBookingVisible}">
                    <Label Grid.Row="0" Text="{Binding Source={x:Static resx:AppLanguage.PendingBooking}}"  Style="{StaticResource HeadingText}"/>
                    <Label Grid.Row="1" Text="{Binding Source={x:Static resx:AppLanguage.PendingBookingMessage}}" VerticalOptions="Start" Style="{StaticResource EntryLabelStyle}"/>
                    <Frame HasShadow="False" Grid.Row="2" Style="{StaticResource ValuesFrameStyle}">
                        <Grid Padding="0" ColumnDefinitions="*,auto" RowDefinitions="auto">
                            <Grid Grid.Row="0" Grid.Column="0" VerticalOptions="Center" IsVisible="{Binding PendingBookingVisible}" RowDefinitions="auto,auto,auto" ColumnDefinitions="auto,*">
                                <Label Grid.Row="0" Grid.Column="1"  Text="{Binding Date}" Style="{StaticResource RegularLabelStyle}" extension:Skeleton.IsBusy="{Binding IsPendingBookingBusy}" extension:Skeleton.Animation="{extension:DefaultAnimation Fade}" extension:Skeleton.BackgroundColor="LightGray"/>
                                <Label Grid.Row="0" Grid.Column="0"  Text="{Binding Source={x:Static theme:FontIcons.Calendar}}" Style="{StaticResource IconLabelLight}" extension:Skeleton.IsBusy="{Binding IsPendingBookingBusy}" extension:Skeleton.Animation="{extension:DefaultAnimation Fade}" extension:Skeleton.BackgroundColor="LightGray"/>
                                <Label Grid.Row="1" Grid.Column="1"   Text="{Binding Address}" Style="{StaticResource RegularLabelStyle}" extension:Skeleton.IsBusy="{Binding IsPendingBookingBusy}" extension:Skeleton.Animation="{extension:DefaultAnimation Fade}" extension:Skeleton.BackgroundColor="LightGray"/>
                                <Label Grid.Row="1" Grid.Column="0"  Text="{Binding Source={x:Static theme:FontIcons.Location}}" Style="{StaticResource IconLabelLight}" extension:Skeleton.IsBusy="{Binding IsPendingBookingBusy}" extension:Skeleton.Animation="{extension:DefaultAnimation Fade}" extension:Skeleton.BackgroundColor="LightGray"/>
                                <Label Grid.Row="2" Grid.Column="1"  Text="{Binding Time}" Style="{StaticResource RegularLabelStyle}" extension:Skeleton.IsBusy="{Binding IsPendingBookingBusy}" extension:Skeleton.Animation="{extension:DefaultAnimation Fade}" extension:Skeleton.BackgroundColor="LightGray"/>
                                <Label Grid.Row="2" Grid.Column="0"  Text="{Binding Source={x:Static theme:FontIcons.Time}}" Style="{StaticResource IconLabelLight}" extension:Skeleton.IsBusy="{Binding IsPendingBookingBusy}" extension:Skeleton.Animation="{extension:DefaultAnimation Fade}" extension:Skeleton.BackgroundColor="LightGray"/>

                                <!-- <ActivityIndicator Grid.Row="0" Grid.Column="2" Color="Black" Grid.RowSpan="2" x:Name="PendingBookingActivityIndicator" IsRunning="{Binding IsPendingBookingBusy}" IsVisible="{Binding IsPendingBookingBusy}" VerticalOptions="CenterAndExpand" HorizontalOptions="CenterAndExpand" /> -->
                            </Grid>
                            <Grid Grid.Row="0" Grid.Column="1">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <Button Grid.Row="0" IsVisible="{Binding PendingBookingVisible}" BackgroundColor="Red" TextColor="White" FontSize="16" FontFamily="{StaticResource PoppinsRegular}" Grid.RowSpan="2" HeightRequest="36" Padding="10,0" CornerRadius="5" VerticalOptions="Center" HorizontalOptions="End" Text="{Binding Source={x:Static resx:AppLanguage.ReviewBooking}}" Command="{Binding ReviewPendingBookingCommand}" extension:Skeleton.IsBusy="{Binding IsPendingBookingBusy}" extension:Skeleton.Animation="{extension:DefaultAnimation Fade}" />
                                <Grid.Triggers>
                                    <DataTrigger TargetType="Grid" Binding="{Binding IsPendingBookingBusy}" Value="True">
                                        <Setter Property="IsEnabled" Value="False" />
                                    </DataTrigger>

                                    <!-- Enable Grid when IsSkeletonAnimationRunning is false -->
                                    <DataTrigger TargetType="Grid" Binding="{Binding IsPendingBookingBusy}" Value="False">
                                        <Setter Property="IsEnabled" Value="True" />
                                    </DataTrigger>

                                </Grid.Triggers>
                            </Grid>
                        </Grid>
                    </Frame>
                </Grid>
                <!--#endregion-->

                <!--#region Find a Charging Location-->
                <Grid Grid.Row="3" RowDefinitions="auto,*"  Margin="20,0,20,0" RowSpacing="5" VerticalOptions="FillAndExpand" MinimumHeightRequest="300" HeightRequest="300" Padding="0">
                    <Label Grid.Row="0" Text="{Binding Source={x:Static resx:AppLanguage.FindaChargingLocation}}" Style="{StaticResource HeadingText}"/>

                    <local:CustomMap x:Name="map"
                     ItemsSource="{Binding PinLocations}"
                        VerticalOptions="FillAndExpand"
                                     Grid.Row="1"    
                        HasScrollEnabled="True"
                        HasZoomEnabled="True"
                        IsShowingUser="True"
                        TrafficEnabled="False"/>
                    <!--<maps:Map x:Name="map"/>-->
                    <Grid Grid.Row="1" ColumnDefinitions="*,auto" RowDefinitions="auto,*" HorizontalOptions="FillAndExpand" VerticalOptions="Start">
                        <Frame HasShadow="False" BackgroundColor="white" Grid.Column="0" CornerRadius="5" Padding="0" Margin="5,10,0,0" VerticalOptions="StartAndExpand" HorizontalOptions="FillAndExpand">
                            <local:CustomSearchBar x:Name="locationSearchBar" BackgroundColor="white" CancelButtonColor="Black" TextColor="Black" HeightRequest="50" PlaceholderColor="gray" Placeholder="Search for location"  TextChanged="SearchBarTextChanged" Unfocused="SearchBarUnFocus"/>
                        </Frame>
                        <Frame BackgroundColor="white" HasShadow="False" Grid.Column="1" CornerRadius="5" Padding="10" HeightRequest="28" WidthRequest="30"  Margin="0,10,10,0" VerticalOptions="StartAndExpand" HorizontalOptions="StartAndExpand">
                            <Label HorizontalOptions="CenterAndExpand" VerticalOptions="Center" BackgroundColor="White" TextColor="Black" Text="{Binding Source={x:Static theme:FontIcons.Filter}}" Style="{StaticResource IconLabelLight}" FontSize="24">
                                <Label.GestureRecognizers>
                                    <TapGestureRecognizer Tapped="FilterTapped"/>
                                </Label.GestureRecognizers>
                            </Label>
                        </Frame>
                        <!--<ActivityIndicator Grid.Column="0" Grid.Row="2" Color="Black" Grid.RowSpan="2" x:Name="y" IsRunning="{Binding IsMapBusy}" IsVisible="{Binding IsMapBusy}" VerticalOptions="CenterAndExpand" HorizontalOptions="CenterAndExpand" />-->

                        <!--search bar list view-->

                        <ListView x:Name="SearchBarList" IsVisible="false" BackgroundColor="White"  Grid.Row="1" VerticalOptions="FillAndExpand"  HorizontalOptions="FillAndExpand"  Margin="5,0,0,5"  HasUnevenRows="true">
                            <ListView.ItemTemplate>
                                <DataTemplate>
                                    <ViewCell Tapped="MoveToLocationTapped">
                                        <StackLayout VerticalOptions="FillAndExpand" HorizontalOptions="FillAndExpand">
                                            <Label Text="{Binding Label}" TextColor="Black" FontAttributes="Bold" Margin="5,5,0,0"/>
                                            <Label Text="{Binding Address}" TextColor="Gray" LineBreakMode="WordWrap" MaxLines="2" Margin="5,0,0,10"/>
                                        </StackLayout>

                                    </ViewCell>
                                </DataTemplate>
                            </ListView.ItemTemplate>
                        </ListView>

                    </Grid>

                </Grid>
                <!--<ActivityIndicator Grid.Row="0" Grid.RowSpan="2" x:Name="ActivityIndicator" IsRunning="{Binding IsBusy}" IsVisible="{Binding IsBusy}" Color="Red" VerticalOptions="CenterAndExpand" HorizontalOptions="CenterAndExpand" />-->





                <!--#endregion-->
                <!--#region upcoming Charge-->
                <Grid Grid.Row="4" RowSpacing="10" Margin="20,10,20,0" RowDefinitions="auto,auto" VerticalOptions="Start">
                    <Label Grid.Row="0" Text="{Binding Source={x:Static resx:AppLanguage.UpComingCharge}}" Style="{StaticResource HeadingText}"/>
                    <Frame HasShadow="False" Grid.Row="1" VerticalOptions="Start" Style="{StaticResource ValuesFrameStyle}">
                        <Grid Padding="0" VerticalOptions="Start" ColumnDefinitions="*,auto,auto" RowDefinitions="auto">
                            <Grid Grid.Row="0" Grid.Column="0" VerticalOptions="Center" IsVisible="{Binding HasUpcomingBookings}" RowDefinitions="auto,auto,auto" ColumnDefinitions="auto,auto">
                                <Label Grid.Row="0" Grid.Column="1" HorizontalOptions="FillAndExpand" Text="{Binding UpcomingDate}" Style="{StaticResource RegularLabelStyle}" extension:Skeleton.IsBusy="{Binding IsUpcomingBookingsBusy}" extension:Skeleton.Animation="{extension:DefaultAnimation Fade}" extension:Skeleton.BackgroundColor="LightGray"/>
                                <Label Grid.Row="0" Grid.Column="0"  Text="{Binding Source={x:Static theme:FontIcons.Calendar}}" Style="{StaticResource IconLabelLight}" extension:Skeleton.IsBusy="{Binding IsUpcomingBookingsBusy}" extension:Skeleton.Animation="{extension:DefaultAnimation Fade}" extension:Skeleton.BackgroundColor="LightGray"/>
                                <Label Grid.Row="1" Grid.Column="1" HorizontalOptions="FillAndExpand"  Text="{Binding UpcomingAddress}" Style="{StaticResource RegularLabelStyle}" extension:Skeleton.IsBusy="{Binding IsUpcomingBookingsBusy}" extension:Skeleton.Animation="{extension:DefaultAnimation Fade}" extension:Skeleton.BackgroundColor="LightGray"/>
                                <Label Grid.Row="1" Grid.Column="0"  Text="{Binding Source={x:Static theme:FontIcons.Location}}" Style="{StaticResource IconLabelLight}" extension:Skeleton.IsBusy="{Binding IsUpcomingBookingsBusy}" extension:Skeleton.Animation="{extension:DefaultAnimation Fade}" extension:Skeleton.BackgroundColor="LightGray"/>
                                <Label Grid.Row="2" Grid.Column="1" HorizontalOptions="FillAndExpand" Text="{Binding UpcomingTime}" Style="{StaticResource RegularLabelStyle}" extension:Skeleton.IsBusy="{Binding IsUpcomingBookingsBusy}" extension:Skeleton.Animation="{extension:DefaultAnimation Fade}" extension:Skeleton.BackgroundColor="LightGray"/>
                                <Label Grid.Row="2" Grid.Column="0"  Text="{Binding Source={x:Static theme:FontIcons.Time}}" Style="{StaticResource IconLabelLight}" extension:Skeleton.IsBusy="{Binding IsUpcomingBookingsBusy}" extension:Skeleton.Animation="{extension:DefaultAnimation Fade}" extension:Skeleton.BackgroundColor="LightGray"/>

                                <!-- <ActivityIndicator Grid.Row="0" Grid.Column="2" Color="Black" Grid.RowSpan="2" IsRunning="{Binding IsUpcomingBookingsBusy}" IsVisible="{Binding IsLastChargeBusy}" VerticalOptions="CenterAndExpand" HorizontalOptions="CenterAndExpand" />-->
                            </Grid>
                            <Label VerticalOptions="Start" Text="{Binding Source={x:Static resx:AppLanguage.NoUpcomingBooking}}" TextColor="Black" FontAttributes="Bold">
                                <Label.Triggers>
                                    <DataTrigger TargetType="Label" Binding="{Binding HasUpcomingBookings}" Value="False">
                                        <Setter Property="IsVisible" Value="True" />
                                    </DataTrigger>
                                    <DataTrigger TargetType="Label" Binding="{Binding HasUpcomingBookings}" Value="True">
                                        <Setter Property="IsVisible" Value="False" />
                                    </DataTrigger>
                                </Label.Triggers>
                            </Label>
                            <Grid Grid.Row="0" Grid.Column="1" VerticalOptions="Start">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <local:IconButton Grid.Row="0" IsVisible="{Binding HasUpcomingBookings}" Style="{StaticResource PrimaryIconButtonStyle}" FrameHeight="15" TitleText="{Binding Source={x:Static resx:AppLanguage.GetDirections}}" LabelIconStyle="{StaticResource IconLabelLight}" IconText="{Binding Source={x:Static theme:FontIcons.Direction}}"  Command="{Binding GetDirectionsCommand}" extension:Skeleton.IsBusy="{Binding IsUpcomingBookingsBusy}" extension:Skeleton.Animation="{extension:DefaultAnimation Fade}" extension:Skeleton.BackgroundColor="LightGray"/>
                                <local:IconButton Grid.Row="1" IsVisible="{Binding HasUpcomingBookings}" Style="{DynamicResource SecondaryIconButtonStyle}" FrameHeight="15" FrameWidth="100" TitleText="{Binding Source={x:Static resx:AppLanguage.StartCharge}}" LabelIconStyle="{StaticResource IconLabelSolid}" IconText="{Binding Source={x:Static theme:FontIcons.Charge}}" Command="{Binding SubmitStartChargeCommand}" HorizontalOptions="End" extension:Skeleton.IsBusy="{Binding IsUpcomingBookingsBusy}" extension:Skeleton.Animation="{extension:DefaultAnimation Fade}" extension:Skeleton.BackgroundColor="LightGray"/>
                                <Grid.Triggers>
                                    <DataTrigger TargetType="Grid" Binding="{Binding IsUpcomingBookingsBusy}" Value="True">
                                        <Setter Property="IsEnabled" Value="False" />
                                    </DataTrigger>

                                    <!-- Enable Grid when IsSkeletonAnimationRunning is false -->
                                    <DataTrigger TargetType="Grid" Binding="{Binding IsUpcomingBookingsBusy}" Value="False">
                                        <Setter Property="IsEnabled" Value="True" />
                                    </DataTrigger>

                                </Grid.Triggers>
                            </Grid>
                        </Grid>
                    </Frame>
                </Grid>
                <!-- #region Last Charge -->
                <Grid Grid.Row="5" Margin="20,10,20,0" VerticalOptions="Start" RowSpacing="10" RowDefinitions="auto,auto">
                    <Label Grid.Row="0" Text="{Binding Source={x:Static resx:AppLanguage.LastCharge}}" Style="{StaticResource HeadingText}" Margin="0"/>
                    <Frame HasShadow="False" Grid.Row="1" Style="{StaticResource ValuesFrameStyle}">
                        <Grid Padding="0" ColumnDefinitions="*,auto,auto" RowDefinitions="auto" >
                            <Grid Grid.Row="0" Grid.Column="0" VerticalOptions="Center" IsVisible="{Binding NoPreviousBookings}"  RowDefinitions="auto,auto,auto" ColumnDefinitions="auto,auto">
                                <Label Grid.Row="0" Grid.Column="1"  Text="{Binding LastChargeDate}" x:Name="Date" Style="{StaticResource RegularLabelStyle}" extension:Skeleton.IsBusy="{Binding IsLastChargeBusy}" extension:Skeleton.Animation="{extension:DefaultAnimation Fade}" extension:Skeleton.BackgroundColor="LightGray"/>
                                <Label Grid.Row="0" Grid.Column="0"  Text="{Binding Source={x:Static theme:FontIcons.Calendar}}" Style="{StaticResource IconLabelLight}"  extension:Skeleton.IsBusy="{Binding IsLastChargeBusy}" extension:Skeleton.Animation="{extension:DefaultAnimation Fade}" extension:Skeleton.BackgroundColor="LightGray"/>
                                <Label Grid.Row="1" Grid.Column="1"  Text="{Binding LastChargeAddress}" Style="{StaticResource RegularLabelStyle}" extension:Skeleton.IsBusy="{Binding IsLastChargeBusy}" extension:Skeleton.Animation="{extension:DefaultAnimation Fade}" extension:Skeleton.BackgroundColor="LightGray"/>
                                <Label Grid.Row="1" Grid.Column="0" Text="{Binding Source={x:Static theme:FontIcons.Location}}" Style="{StaticResource IconLabelLight}" extension:Skeleton.IsBusy="{Binding IsLastChargeBusy}" extension:Skeleton.Animation="{extension:DefaultAnimation Fade}" extension:Skeleton.BackgroundColor="LightGray"/>
                                <Label Grid.Row="2" Grid.Column="1"  Text="{Binding LastChargeTime}" Style="{StaticResource RegularLabelStyle}"  extension:Skeleton.IsBusy="{Binding IsLastChargeBusy}" extension:Skeleton.Animation="{extension:DefaultAnimation Fade}" extension:Skeleton.BackgroundColor="LightGray"/>
                                <Label Grid.Row="2" Grid.Column="0" Text="{Binding Source={x:Static theme:FontIcons.Charging}}" Style="{StaticResource IconLabelLight}"  extension:Skeleton.IsBusy="{Binding IsLastChargeBusy}" extension:Skeleton.Animation="{extension:DefaultAnimation Fade}" extension:Skeleton.BackgroundColor="LightGray"/>

                                <!-- <ActivityIndicator Grid.Row="0" Grid.Column="2" Color="Black" Grid.RowSpan="2" IsRunning="{Binding IsLastChargeBusy}" IsVisible="{Binding IsLastChargeBusy}" VerticalOptions="CenterAndExpand" HorizontalOptions="CenterAndExpand" /> -->
                            </Grid>
                            <Label Text="{Binding Source={x:Static resx:AppLanguage.NoPreviousBooking}}" TextColor="Black" FontAttributes="Bold">
                                <Label.Triggers>
                                    <DataTrigger TargetType="Label" Binding="{Binding NoPreviousBookings}" Value="False">
                                        <Setter Property="IsVisible" Value="true" />
                                    </DataTrigger>
                                    <DataTrigger TargetType="Label" Binding="{Binding NoPreviousBookings}" Value="True">
                                        <Setter Property="IsVisible" Value="false" />
                                    </DataTrigger>
                                </Label.Triggers>
                            </Label>
                            <Grid Grid.Row="0" Grid.Column="1">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <local:IconButton Grid.Row="0" IsVisible="{Binding NoPreviousBookings}"  FrameHeight="15" Style="{StaticResource PrimaryIconButtonStyle}" TitleText="View Booking" Command="{Binding ViewBookingCommand}" HorizontalOptions="End" extension:Skeleton.IsBusy="{Binding IsLastChargeBusy}" extension:Skeleton.Animation="{extension:DefaultAnimation Fade}" extension:Skeleton.BackgroundColor="LightGray"/>
                                <local:IconButton Grid.Row="1" IsVisible="{Binding NoPreviousBookings}"  FrameHeight="15" Style="{StaticResource SecondaryIconButtonStyle}" TitleText="Book Again" IconText="{Binding Source={x:Static theme:FontIcons.BookAgain}}" LabelIconStyle="{StaticResource IconLabelLight}" Command="{Binding BookAgainCommand}" HorizontalOptions="End" extension:Skeleton.IsBusy="{Binding IsLastChargeBusy}" extension:Skeleton.Animation="{extension:DefaultAnimation Fade}" extension:Skeleton.BackgroundColor="LightGray"/>
                                <Grid.Triggers>
                                    <DataTrigger TargetType="Grid" Binding="{Binding IsLastChargeBusy}" Value="True">
                                        <Setter Property="IsEnabled" Value="False" />
                                    </DataTrigger>

                                    <!-- Enable Grid when IsSkeletonAnimationRunning is false -->
                                    <DataTrigger TargetType="Grid" Binding="{Binding IsLastChargeBusy}" Value="False">
                                        <Setter Property="IsEnabled" Value="True" />
                                    </DataTrigger>

                                </Grid.Triggers>
                            </Grid>
                        </Grid>
                    </Frame>
                </Grid>
                <!--#endregion-->

            </Grid>
        </ScrollView>
    </ContentPage.Content>
</ContentPage>
